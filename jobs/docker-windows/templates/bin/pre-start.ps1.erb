$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

$mtx = New-Object System.Threading.Mutex($false, "PathMutex")

if (!$mtx.WaitOne(300000)) {
  throw "Could not acquire PATH mutex"
}

$AddedFolder= "C:\var\vcap\packages\docker-windows\docker\"

$OldPath=(Get-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment' -Name PATH).Path

if (-not $OldPath.Contains($AddedFolder)) {
  $NewPath=$OldPath+';'+$AddedFolder
  Set-ItemProperty -Path 'Registry::HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Session Manager\Environment' -Name PATH -Value $newPath
}

$mtx.ReleaseMutex()

<% if_link('docker') do |docker| %>
  # docker link present
  <% docker.if_p('env.http_proxy') do |http_proxy| %>
    SetX HTTP_PROXY "<%= http_proxy %>" /m
  <% end %>
  <% docker.if_p('env.https_proxy') do |https_proxy| %>
    SetX HTTPS_PROXY "<%= https_proxy %>" /m
  <% end %>
  <% docker.if_p('env.no_proxy') do |no_proxy| %>
    SetX NO_PROXY "<%= no_proxy %>" /m
  <% end %>
<% end %>

C:\var\vcap\packages\docker-windows\docker\dockerd --register-service --config-file "c:/var/vcap/jobs/docker-windows/config/daemon.json"

Start-Service Docker
